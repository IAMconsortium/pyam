[tool.poetry]
name = "pyam-iamc"
version = "0.0.0"
description = "Analysis & visualization of integrated-assessment scenarios"
authors = [
    "Matthew Gidden <gidden@iiasa.ac.at>",
    "Daniel Huppmann <huppmann@iiasa.ac.at>",
    "Zebedee Nicholls <znicholls@unknown.com>",
    "Nikolay Kushin <zikolach@unknown.com>",
    "Robin Lamboll <Rlamboll@unknown.com>",
    "Oliver Fricko <fricko@iiasa.ac.at>",
    "Jonas Hörsch <coroa@unknown.com>",
    "Paul Natsuo Kishimoto <kishimot@iiasa.ac.at>",
    "Thorsten Burandt <tburandt@unknown.com>",
    "Ross Ursino <rossursino@unknown.com>",
    "Maik Budzinski <mabudz@unknown.com>",
    "Jarmo Kikstra <kikstra@iiasa.ac.at>",
    "Michael Pimmer <fonfon@unknown.com>",
    "Patrick Jürgens <pjuergens@unknown.com>",
    "Florian Maczek <maczek@iiasa.ac.at>",
    "Laura Wienpahl <LauWien@unknown.com>",
    "Philip Hackstock <hackstock@iiasa.ac.at>",
    "Pietro Monticone <pitmonticone@unknown.com>",
    "Edward Byers <byers@iiasa.ac.at>",
    "Fridolin Glatter <glatter@iiasa.ac.at>",
]
license = "Apache-2.0"
readme = "README.md"
packages = [{ include = "pyam" }]
repository = "https://github.com/IAMconsortium/pyam"
documentation = "https://pyam-iamc.readthedocs.io"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Natural Language :: English",
    "Programming Language :: Python",
]

# NOTE TO DEVS
# If you change a minimum version below, please explicitly implement the change
# in our minimum-reqs test in the file ./.github/workflows/pytest-dependency.yml
# Please also add a section "Dependency changes" to the release notes
[tool.poetry.dependencies]
python = ">=3.10, <3.13"
iam-units = ">=2020.4.21"
ixmp4 = ">=0.9.0"
matplotlib = ">=3.6.0"
numpy = ">=1.26.0"
openpyxl = ">=3.1.2"
pandas = ">=2.1.2"
Pint = ">=0.13"
PyYAML = ">=6.0.1"
scipy = ">=1.10.0"
seaborn = ">=0.11"
requests = ">2.27.1"
wquantiles = ">=0.6"
XlsxWriter = ">=3.0.3"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = ">=0.2.1"
coverage = ">=6.5.0"
coveralls = ">=3.3.1"
pytest = ">=8.0.2"
pytest-cov = ">=4.1.0"
pytest-mpl = ">=0.17.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
# docs requires 'tutorials'
autodocsumm = ">=0.2.12"
kaleido = ">=0.2.0, <0.2.1.post"
nbsphinx = ">=0.9.3"
numpydoc = ">=1.6.0"
pillow = ">=10.2.0"
sphinx = ">=7.2.6"
sphinx-gallery = ">=0.15.0"

[tool.poetry.group.optional_io_formats]
optional = true

[tool.poetry.group.optional_io_formats.dependencies]
datapackage = ">=1.15.2"
xlrd = ">=2.0.1"

[tool.poetry.group.optional_plotting]
optional = true

[tool.poetry.group.optional_plotting.dependencies]
plotly = ">=5.19.0"

[tool.poetry.group.tutorials]
optional = true

[tool.poetry.group.tutorials.dependencies]
ipykernel = ">=6.29.3"
jupyter_client = ">=8.6.0"
nbconvert = ">= 7.3"
nbformat = ">=5.9.2"
pypandoc = ">=1.13"

[tool.poetry.group.wbdata]
optional = true

[tool.poetry.group.wbdata.dependencies]
wbdata = ">=1.0.0"

[tool.poetry.group.unfccc]
optional = true

[tool.poetry.group.unfccc.dependencies]
unfccc_di_api = ">=3.0.1"

[tool.poetry.group.calamine]
optional = true

[tool.poetry.group.calamine.dependencies]
python-calamine = ">=0.2.3"

[build-system]
build-backend = "poetry_dynamic_versioning.backend"
requires = ["poetry-core>=1.2.0", "poetry-dynamic-versioning"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    "RELEASE_NOTES.md",
    ".git",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "site-packages",
    "venv",
]
extend-include = ["*.ipynb"]

# Same as Black.
line-length = 88


[tool.ruff.lint]
select = ["C9", "E", "F", "I", "W"]
ignore = ["B008"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.format]
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.poetry-dynamic-versioning]
enable = true
style = "pep440"
vcs = "git"
